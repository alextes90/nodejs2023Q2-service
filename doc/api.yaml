---
openapi: 3.0.0
paths:
  '/':
    get:
      operationId: AppController_getHello
      parameters: []
      responses:
        '200':
          description: ''
  '/user':
    get:
      operationId: UserController_findAll
      parameters: []
      responses:
        '200':
          description: The user record
          content:
            application/json:
              schema:
                type: array
                items:
                  '$ref': '#/components/schemas/ReturnUser'
    post:
      operationId: UserController_create
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              '$ref': '#/components/schemas/CreateUserDto'
      responses:
        '201':
          description: The user record
          content:
            application/json:
              schema:
                '$ref': '#/components/schemas/ReturnUser'
        '400':
          description: does not contained required body
  '/user/{id}':
    get:
      operationId: UserController_findOne
      parameters:
        - name: id
          required: true
          in: path
          schema:
            type: string
      responses:
        '200':
          description: The user record
          content:
            application/json:
              schema:
                '$ref': '#/components/schemas/ReturnUser'
        '400':
          description: id is not a valid uuid
        '404':
          description: no such id
    put:
      operationId: UserController_update
      parameters:
        - name: id
          required: true
          in: path
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              '$ref': '#/components/schemas/UpdateUserDto'
      responses:
        '200':
          description: The user record
          content:
            application/json:
              schema:
                '$ref': '#/components/schemas/ReturnUser'
        '400':
          description: id is not a valid uuid
        '403':
          description: invalid old password
        '404':
          description: no such id
    delete:
      operationId: UserController_delete
      parameters:
        - name: id
          required: true
          in: path
          schema:
            type: string
      responses:
        '204':
          description: deleted successfully
        '400':
          description: id is not a valid uuid
        '404':
          description: no such id
  '/track':
    get:
      operationId: TracksController_findAll
      parameters: []
      responses:
        '200':
          description: The track records
          content:
            application/json:
              schema:
                type: array
                items:
                  '$ref': '#/components/schemas/Track'
    post:
      operationId: TracksController_create
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              '$ref': '#/components/schemas/CreateTrackDto'
      responses:
        '201':
          description: ''
          content:
            application/json:
              schema:
                '$ref': '#/components/schemas/Track'
        '400':
          description: does not contained required fields
  '/track/{id}':
    get:
      operationId: TracksController_findOne
      parameters:
        - name: id
          required: true
          in: path
          schema:
            type: string
      responses:
        '200':
          description: The track record
          content:
            application/json:
              schema:
                '$ref': '#/components/schemas/Track'
        '400':
          description: id is not a valid uuid
        '404':
          description: no such id
    put:
      operationId: TracksController_update
      parameters:
        - name: id
          required: true
          in: path
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              '$ref': '#/components/schemas/UpdateTrackDto'
      responses:
        '200':
          description: The user record
          content:
            application/json:
              schema:
                '$ref': '#/components/schemas/Track'
        '400':
          description: id is not a valid uuid
        '404':
          description: no such id
    delete:
      operationId: TracksController_remove
      parameters:
        - name: id
          required: true
          in: path
          schema:
            type: string
      responses:
        '204':
          description: deleted successfully
        '400':
          description: id is not a valid uuid
        '404':
          description: no such id
  '/album':
    get:
      operationId: AlbumsController_findAll
      parameters: []
      responses:
        '200':
          description: The album records
          content:
            application/json:
              schema:
                type: array
                items:
                  '$ref': '#/components/schemas/Album'
    post:
      operationId: AlbumsController_create
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              '$ref': '#/components/schemas/CreateAlbumDto'
      responses:
        '201':
          description: ''
          content:
            application/json:
              schema:
                '$ref': '#/components/schemas/Album'
        '400':
          description: does not contained required fields
  '/album/{id}':
    get:
      operationId: AlbumsController_findOne
      parameters:
        - name: id
          required: true
          in: path
          schema:
            type: string
      responses:
        '200':
          description: The album record
          content:
            application/json:
              schema:
                '$ref': '#/components/schemas/Album'
        '400':
          description: id is not a valid uuid
        '404':
          description: no such id
    put:
      operationId: AlbumsController_update
      parameters:
        - name: id
          required: true
          in: path
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              '$ref': '#/components/schemas/UpdateAlbumDto'
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                '$ref': '#/components/schemas/Album'
        '400':
          description: id is not a valid uuid
        '404':
          description: no such id
    delete:
      operationId: AlbumsController_remove
      parameters:
        - name: id
          required: true
          in: path
          schema:
            type: string
      responses:
        '204':
          description: deleted successfully
        '400':
          description: id is not a valid uuid
        '404':
          description: no such id
  '/artist':
    get:
      operationId: ArtistsController_findAll
      parameters: []
      responses:
        '200':
          description: The artist records
          content:
            application/json:
              schema:
                type: array
                items:
                  '$ref': '#/components/schemas/Artist'
    post:
      operationId: ArtistsController_create
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              '$ref': '#/components/schemas/CreateArtistDto'
      responses:
        '201':
          description: ''
          content:
            application/json:
              schema:
                '$ref': '#/components/schemas/Artist'
        '400':
          description: does not contained required fields
  '/artist/{id}':
    get:
      operationId: ArtistsController_findOne
      parameters:
        - name: id
          required: true
          in: path
          schema:
            type: string
      responses:
        '200':
          description: The artist record
          content:
            application/json:
              schema:
                '$ref': '#/components/schemas/Artist'
        '400':
          description: id is not a valid uuid
        '404':
          description: no such id
    put:
      operationId: ArtistsController_update
      parameters:
        - name: id
          required: true
          in: path
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              '$ref': '#/components/schemas/UpdateArtistDto'
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                '$ref': '#/components/schemas/Artist'
        '400':
          description: id is not a valid uuid
        '404':
          description: no such id
    delete:
      operationId: ArtistsController_remove
      parameters:
        - name: id
          required: true
          in: path
          schema:
            type: string
      responses:
        '204':
          description: deleted successfully
        '400':
          description: id is not a valid uuid
        '404':
          description: no such id
  '/favs':
    get:
      operationId: FavoritesController_findAll
      parameters: []
      responses:
        '200':
          description: The favorites records
          content:
            application/json:
              schema:
                '$ref': '#/components/schemas/ReturnRaforite'
  '/favs/track/{id}':
    post:
      operationId: FavoritesController_postTrack
      parameters:
        - name: id
          required: true
          in: path
          schema:
            type: string
      responses:
        '201':
          description: ''
        '400':
          description: id is not a valid uuid
        '404':
          description: no such id
    delete:
      operationId: FavoritesController_deleteTrack
      parameters:
        - name: id
          required: true
          in: path
          schema:
            type: string
      responses:
        '204':
          description: ''
        '400':
          description: id is not a valid uuid
        '404':
          description: no such id
  '/favs/album/{id}':
    post:
      operationId: FavoritesController_postAlbum
      parameters:
        - name: id
          required: true
          in: path
          schema:
            type: string
      responses:
        '201':
          description: ''
        '400':
          description: id is not a valid uuid
        '404':
          description: no such id
    delete:
      operationId: FavoritesController_deleteAlbum
      parameters:
        - name: id
          required: true
          in: path
          schema:
            type: string
      responses:
        '204':
          description: ''
        '400':
          description: id is not a valid uuid
        '404':
          description: no such id
  '/favs/artist/{id}':
    post:
      operationId: FavoritesController_postArtist
      parameters:
        - name: id
          required: true
          in: path
          schema:
            type: string
      responses:
        '201':
          description: ''
        '400':
          description: id is not a valid uuid
        '404':
          description: no such id
    delete:
      operationId: FavoritesController_deleteArtist
      parameters:
        - name: id
          required: true
          in: path
          schema:
            type: string
      responses:
        '204':
          description: ''
        '400':
          description: id is not a valid uuid
        '404':
          description: no such id
info:
  title: Home_Library_1
  description: Home_Library_application
  version: 0.0.1
  contact: {}
tags: []
servers: []
components:
  schemas:
    ReturnUser:
      type: object
      properties:
        id:
          type: string
        login:
          type: string
        version:
          type: number
        createdAt:
          type: number
        updatedAt:
          type: number
      required:
        - id
        - login
        - version
        - createdAt
        - updatedAt
    CreateUserDto:
      type: object
      properties:
        login:
          type: string
          description: your login
          example: alex
        password:
          type: string
          description: password
          example: 123qwer!
      required:
        - login
        - password
    UpdateUserDto:
      type: object
      properties:
        oldPassword:
          type: string
        newPassword:
          type: string
      required:
        - oldPassword
        - newPassword
    Track:
      type: object
      properties:
        id:
          type: string
        name:
          type: string
        artistId:
          type: string
          nullable: true
        albumId:
          type: string
          nullable: true
        duration:
          type: number
      required:
        - id
        - name
        - artistId
        - albumId
        - duration
    CreateTrackDto:
      type: object
      properties:
        name:
          type: string
          description: name of track
          example: Korol i Shut
        artistId:
          type: string
          nullable: true
          description: id of artist
          example: dd3a192c-d498-4483-afeb-2a170b695c18 | null
        albumId:
          type: string
          nullable: true
          description: id of album
          example: dd3a192c-d498-4483-afeb-2a170b695c18 | null
        duration:
          type: number
          description: duaration in sec
          example: '300'
      required:
        - name
        - artistId
        - albumId
        - duration
    UpdateTrackDto:
      type: object
      properties:
        name:
          type: string
          description: name of track
          example: Korol i Shut
        artistId:
          type: string
          nullable: true
          description: id of artist
          example: dd3a192c-d498-4483-afeb-2a170b695c18 | null
        albumId:
          type: string
          nullable: true
          description: id of album
          example: dd3a192c-d498-4483-afeb-2a170b695c18 | null
        duration:
          type: number
          description: duaration in sec
          example: '300'
      required:
        - name
        - artistId
        - albumId
        - duration
    Album:
      type: object
      properties:
        id:
          type: string
        name:
          type: string
        year:
          type: number
        artistId:
          type: string
          nullable: true
      required:
        - id
        - name
        - year
        - artistId
    CreateAlbumDto:
      type: object
      properties:
        name:
          type: string
          description: name of the album
          example: Korol i Shut
        year:
          type: number
          description: year of creation
          example: '1997'
        artistId:
          type: string
          nullable: true
          description: id of artist
          example: 3af3d2ca-9d3c-4308-b47c-9829123f3335 | null
      required:
        - name
        - year
        - artistId
    UpdateAlbumDto:
      type: object
      properties:
        name:
          type: string
          description: name of the album
          example: Korol i Shut
        year:
          type: number
          description: year of creation
          example: '1997'
        artistId:
          type: string
          nullable: true
          description: id of artist
          example: 3af3d2ca-9d3c-4308-b47c-9829123f3335 | null
      required:
        - name
        - year
        - artistId
    Artist:
      type: object
      properties:
        id:
          type: string
        name:
          type: string
        grammy:
          type: boolean
      required:
        - id
        - name
        - grammy
    CreateArtistDto:
      type: object
      properties:
        name:
          type: string
          description: name of artist
          example: Korol i Shut
        grammy:
          type: boolean
          description: name of artist
          example: 'false'
      required:
        - name
        - grammy
    UpdateArtistDto:
      type: object
      properties:
        name:
          type: string
          description: name of artist
          example: Korol i Shut
        grammy:
          type: boolean
          description: name of artist
          example: 'false'
      required:
        - name
        - grammy
    ReturnRaforite:
      type: object
      properties:
        artist:
          type: array
          items:
            '$ref': '#/components/schemas/Artist'
        albums:
          type: array
          items:
            '$ref': '#/components/schemas/Album'
        tracks:
          type: array
          items:
            '$ref': '#/components/schemas/Track'
      required:
        - artist
        - albums
        - tracks
